---
- hosts: localhost
  vars:
    remote_user: root
    rancher_server: 127.0.0.1
    rancher_port: 8080
    rancher_agent_name: "agent"
    rancher_agent_version: v1.0.2
    rancher_api_access_key: foo
    rancher_api_access_secret: bar
    docker_volume_netshare_version: 0.16
    swap_size: 2G
  
  tasks:
  # Do all the common things
  - include: common.yml

  - name: Configure OpenSSH to listen on port 2020
    lineinfile:
      dest=/etc/ssh/sshd_config
      regexp="Port 22"
      line="Port 2020"

  - name: Restart OpenSSH
    service:
      name=ssh
      state=restarted

  # Registration with Rancher server
  - name: Get the default project id
    action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_server }}:{{ rancher_port }}/v1/projects" return_content=yes
      user="{{ rancher_api_access_key }}"
      password="{{ rancher_api_access_secret }}"
    register: project_id

  - name: Return the registration token URL of Rancher server
    action: uri
      method=POST
      status_code=201
      url="http://{{ rancher_server }}:{{ rancher_port }}/v1/registrationtokens?projectId={{ project_id.json['data'][0]['id'] }}" return_content=yes
      user="{{ rancher_api_access_key }}"
      password="{{ rancher_api_access_secret }}"
    register: rancher_token_url

  - name: Return the registration URL of Rancher server
    action: uri
      method=GET
      url={{ rancher_token_url.json['links']['self'] }} return_content=yes
      user="{{ rancher_api_access_key }}"
      password="{{ rancher_api_access_secret }}"
    register: rancher_token

  - name: Check if the rancher-agent is running
    command: docker ps -a
    register: containers

  - name: Register the Host machine with the Rancher server
    docker:
      image: rancher/agent:{{ rancher_agent_version }}
      privileged: yes
      detach: True
      volumes: /var/run/docker.sock:/var/run/docker.sock
      command: "{{ rancher_token.json['registrationUrl'] }}"
      state: started
    when: "{{ 'rancher-agent' not in containers.stdout }}"

  # Install and run docker-volume-netshare service
  - name: Download docker-volume-netshare
    get_url:
      url=https://github.com/ContainX/docker-volume-netshare/releases/download/v{{ docker_volume_netshare_version }}/docker-volume-netshare_{{ docker_volume_netshare_version }}_amd64.deb
      dest=/tmp/docker-volume-netshare_{{ docker_volume_netshare_version }}_amd64.deb

  - name: Install docker-volume-netshare
    apt:
      deb=/tmp/docker-volume-netshare_{{ docker_volume_netshare_version }}_amd64.deb

  - name: Start docker-volume-netshare service
    service:
      name=docker-volume-netshare
      state=started

  - name: Run docker-volume-netshare with nfs option
    command: daemon docker-volume-netshare nfs -o rw,hard,nointr > /var/log/docker-volume-netshare.log

  - name: insert/update IAM creds in /etc/docker/default
    blockinfile:
      dest: /etc/default/docker
      block: |
        AWS_ACCESS_KEY_ID = {{ AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY = {{ AWS_SECRET_ACCESS_KEY }}
        AWS_REGION = {{ AWS_REGION }}
