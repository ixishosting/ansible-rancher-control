---
  - name: Fail if OS distro is not Ubuntu 16.04
    fail:
      msg="The role is designed only for Ubuntu 16.04"
    when: "{{ ansible_distribution_version | version_compare('16.04', '!=') }}"

  - name: Gather facts
    action: ec2_facts

  # Install Docker
  - name: Add docker apt repo
    apt_repository:
      repo="deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main"
      state=present

  - name: Import the Docker repository key
    apt_key:
      url=https://apt.dockerproject.org/gpg
      state=present
      id=2C52609D

  # Install some other stuff
  - name: Install dependencies
    apt:
      name={{ item }}
      update_cache=yes
    with_items:
      - docker-engine

  - name: Install docker-py
    pip:
      name=docker-py
      state=present
      version=1.8.1

  - name: Create a docker group
    group:
      name=docker
      state=present

  - name: Add user(s) to docker group
    user:
      name={{ item }}
      group=docker
      state=present
    with_items: docker_users
    when: docker_users is defined

  # Add some swap
  - name: allocate swap file
    command:
      fallocate -l {{ swap_size }} /swapfile

  - name: set permissions on swap file
    file:
      path=/swapfile
      mode=0600
      state=file

  - name: make swap file
    command: mkswap /swapfile

  - name: enable swap file
    command: swapon /swapfile

  - name: download ctop
    get_url:
      url: https://github.com/bcicen/ctop/releases/download/v0.4.1/ctop-0.4.1-linux-amd64
      dest: /usr/local/bin/ctop
      mode: 0755

  - name: install cloudwatch monitoring dependencies
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - unzip
      - libwww-perl
      - libdatetime-perl

  - name: download and extract cloudwatch monitoring scripts
    unarchive:
      src: http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip
      dest: /root/
      remote_src: yes
  
  - name: touch config file
    file:
      path: /root/aws-scripts-mon/awscreds.conf
      state: touch

  - name: setup cloudwatch creds file
    blockinfile:
      path: /root/aws-scripts-mon/awscreds.conf
      block: |
        AWSAccessKeyId={{ cloudwatch_aws_access_key_id }}
        AWSSecretKey={{ cloudwatch_aws_secret_key }}

  - name: setup cloudwatch push crons
    cron:
      name: push metrics to cloudwatch
      minute: "*/5"
      job: "cd /root/aws-scripts-mon/ && ./mon-put-instance-data.pl --disk-path=/ --disk-space-util --mem-util --swap-util --from-cron"
